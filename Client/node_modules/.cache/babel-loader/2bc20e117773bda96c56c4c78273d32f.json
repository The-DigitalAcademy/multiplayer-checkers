{"ast":null,"code":"var _jsxFileName = \"/Users/dam136/Desktop/React-Checkers-master/multiplayer-checkers/Client/src/App.js\";\nimport React from 'react';\nimport Checkers from './components/Checkers';\nimport Display from './components/Display';\nimport CenteredButton from './components/CenteredButton'; //connection\n\nimport io from 'socket.io-client';\nlet socket;\nvar connectionTries = 0;\nconst initialState = {\n  step: \"Welcome\",\n  connected: false\n};\nvar name = \"\";\nvar roomName = \"\";\nvar opponentName = \"\";\nvar isRoomHost = false;\nvar matchStarted = false;\nvar currentTurn = \"P1\";\nvar P1Rematch = false;\nvar P2Rematch = false;\nconst ENDPOINT = 'http://localhost:8080/';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChangeName = e => {\n      name = e.target.value;\n    };\n\n    this.handleRoom = e => {\n      roomName = e.target.value;\n    };\n\n    this.enteredName = () => {\n      if (name === undefined || name === \"\") {\n        name = names[Math.floor(Math.random() * names.length)];\n      }\n\n      socket = io(ENDPOINT);\n      socket.on('reconnecting', () => {\n        connectionTries++;\n\n        if (connectionTries === 1) {\n          this.setState({\n            connectionError: \"Unable to connect to server!\"\n          });\n        }\n      });\n      socket.on('connect', () => {\n        connectionTries = 0;\n        this.setState({\n          step: \"Searching\",\n          connectionError: \"\"\n        });\n      });\n      socket.emit('user-login', name);\n      socket.on('user-created-room', this.createRoomSuccess);\n      socket.on('creating-failed', this.createRoomFailed);\n      socket.on('user-joined', this.joinRoomSuccess);\n      socket.on('joining-failed', this.joinRoomFailed);\n      socket.on('user-switch-turn', receivedData => {\n        currentTurn = receivedData.turn;\n        this.setState({\n          currentTurn: currentTurn\n        });\n      });\n      socket.on('user-left', () => {\n        this.returnToMenu();\n      });\n    };\n\n    this.requestJoinRoom = () => {\n      if (this.validateRoomName() === false) {\n        this.setState({\n          connectionError: \"Please enter a valid room name\"\n        });\n        return;\n      }\n\n      socket.emit('user-join-room', {\n        name: name,\n        roomName: roomName\n      });\n    };\n\n    this.joinRoomSuccess = enemy => {\n      opponentName = enemy;\n      matchStarted = true;\n      this.setState({\n        step: \"Playing\",\n        connectionError: \"\"\n      });\n    };\n\n    this.joinRoomFailed = reason => {\n      this.setState({\n        connectionError: reason\n      });\n    };\n\n    this.requestCreateRoom = () => {\n      if (this.validateRoomName() === false) {\n        this.setState({\n          connectionError: \"Please enter a valid room name\"\n        });\n        return;\n      }\n\n      socket.emit('user-create-room', roomName);\n    };\n\n    this.createRoomSuccess = reason => {\n      isRoomHost = true;\n      this.setState({\n        step: \"Playing\",\n        connectionError: \"\"\n      });\n    };\n\n    this.createRoomFailed = reason => {\n      this.setState({\n        connectionError: reason\n      });\n    };\n\n    this.validateRoomName = () => {\n      if (roomName === undefined || roomName === \"\") {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.flipTurn = () => {\n      if (currentTurn === \"P1\") {\n        currentTurn = \"P2\";\n      } else {\n        currentTurn = \"P1\";\n      }\n\n      this.setState({\n        currentTurn: currentTurn\n      });\n    };\n\n    this.returnToMenu = () => {\n      roomName = \"\";\n      opponentName = \"\";\n      isRoomHost = false;\n      matchStarted = false;\n      currentTurn = \"P1\";\n      P1Rematch = false;\n      P2Rematch = false;\n      this.setState({\n        step: \"Searching\",\n        finished: false\n      });\n    };\n\n    this.retryClick = () => {\n      socket.emit(\"retryClick\", isRoomHost);\n\n      if (isRoomHost) {\n        P1Rematch = true;\n      } else {\n        P2Rematch = true;\n      }\n    };\n\n    this.onRetryReceive = otherIsHost => {\n      //not socket.on yet. also not made on server\n      if (otherIsHost) {\n        P2Rematch = true;\n      } else {\n        P1Rematch = true;\n      }\n\n      if (P1Rematch && P2Rematch) {\n        socket.emit(\"restartGame\");\n      }\n    };\n  }\n\n  render() {\n    var error;\n    var UI = \"\";\n\n    if (this.state.step === \"Welcome\") {\n      if (this.state.connectionError !== undefined) {\n        error = /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 12\n          }\n        }, this.state.connectionError);\n      }\n\n      UI = [/*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '10%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 4\n        }\n      }, error, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Enter name...\",\n        onChange: this.handleChangeName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(CenteredButton, {\n        callback: this.enteredName,\n        text: \"Confirm name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 5\n        }\n      }))];\n    } else if (this.state.step === \"Searching\") {\n      if (this.state.connectionError !== undefined) {\n        error = /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 12\n          }\n        }, this.state.connectionError);\n      }\n\n      UI = [/*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 4\n        }\n      }, \"Welcome \", name), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '7%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 4\n        }\n      }, error, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Enter room name...\",\n        onChange: this.handleRoom,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CenteredButton, {\n        callback: this.requestCreateRoom,\n        text: \"Create room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(CenteredButton, {\n        callback: this.requestJoinRoom,\n        text: \"Join room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 6\n        }\n      })))];\n    } else {\n      var text = \"Waiting for opponent  |  Room = \" + roomName;\n\n      if (opponentName !== \"\") {\n        if (isRoomHost === true && currentTurn === \"P1\" || isRoomHost === false && currentTurn === \"P2\") {\n          text = name + \"'s turn!\";\n        } else {\n          text = opponentName + \"'s turn!\";\n        }\n      }\n\n      var Rematch = /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          paddingTop: \"75%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      }, \"Rematch\");\n      UI = [/*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 4\n        }\n      }, text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Display, {\n        dir: \"left\",\n        text: isRoomHost ? name : opponentName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 6\n        }\n      }), this.props.finished === true && P1Rematch === true ? Rematch : \"\", \";\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"boardContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Checkers, {\n        returnCallback: this.returnToMenu,\n        matchStarted: matchStarted,\n        player: isRoomHost ? \"P1\" : \"P2\",\n        isHost: isRoomHost,\n        name: name,\n        opponentName: opponentName,\n        socket: socket,\n        flipTurnCallback: this.flipTurn,\n        retryCallback: this.retryClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Display, {\n        dir: \"right\",\n        text: isRoomHost ? opponentName : name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }\n      }), this.state.finished === true && P2Rematch === true ? Rematch : \"\", \";\")))];\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }\n    }, \"Checkers Online\"), UI);\n  }\n\n}\n\nexport default App;\nconst names = [\"nar\", \"An\", \"Alfr\", \"Alvi\", \"Ari\", \"Arinbjorn\", \"Arngeir\", \"Arngrim\", \"Arnfinn\", \"Asgeirr\", \"Askell\", \"Asvald\", \"Bard\", \"Baror\", \"Bersi\", \"Borkr\", \"Bjarni\", \"Bjorn\", \"Brand\", \"Brandr\", \"Cairn\", \"Canute\", \"Dar\", \"Einarr\", \"Eirik\", \"Egill\", \"Engli\", \"Eyvindr\", \"Erik\", \"Eyvind\", \"Finnr\", \"Floki\", \"Fromund\", \"Geirmundr\", \"Geirr\", \"Geri\", \"Gisli\", \"Gizzur\", \"Gjafvaldr\", \"Glumr\", \"Gorm\", \"Grmir\", \"Gunnarr\", \"Guomundr\", \"Hak\", \"Halbjorn\", \"Halfdan\", \"Hallvard\", \"Hamal\", \"Hamundr\", \"Harald\", \"Harek\", \"Hedinn\", \"Helgi\", \"Henrik\", \"Herbjorn\", \"Herjolfr\", \"Hildir\", \"Hogni\", \"Hrani\", \"Ivarr\", \"Hrolf\", \"Jimmy\", \"Jon\", \"Jorund\", \"Kalf\", \"Ketil\", \"Kheldar\", \"Klaengr\", \"Knut\", \"Kolbeinn\", \"Kolli\", \"Kollr\", \"Lambi\", \"Magnus\", \"Moldof\", \"Mursi\", \"Njall\", \"Oddr\", \"Olaf\", \"Orlyg\", \"Ormr\", \"Ornolf\", \"Osvald\", \"Ozurr\", \"Poror\", \"Prondir\", \"Ragi\", \"Ragnvald\", \"Refr\", \"Runolf\", \"Saemund\", \"Siegfried\", \"Sigmundr\", \"Sigurd\", \"Sigvat\", \"Skeggi\", \"Skomlr\", \"Slode\", \"Snorri\", \"Sokkolf\", \"Solvi\", \"Surt\", \"Sven\", \"Thangbrand\", \"Thjodoft\", \"Thorod\", \"Thorgest\", \"Thorvald\", \"Thrain\", \"Throst\", \"Torfi\", \"Torix\", \"Tryfing\", \"Ulf\", \"Valgaror\", \"Vali\", \"Vifil\", \"Vigfus\", \"Vika\", \"Waltheof\"];","map":{"version":3,"sources":["/Users/dam136/Desktop/React-Checkers-master/multiplayer-checkers/Client/src/App.js"],"names":["React","Checkers","Display","CenteredButton","io","socket","connectionTries","initialState","step","connected","name","roomName","opponentName","isRoomHost","matchStarted","currentTurn","P1Rematch","P2Rematch","ENDPOINT","App","Component","state","handleChangeName","e","target","value","handleRoom","enteredName","undefined","names","Math","floor","random","length","on","setState","connectionError","emit","createRoomSuccess","createRoomFailed","joinRoomSuccess","joinRoomFailed","receivedData","turn","returnToMenu","requestJoinRoom","validateRoomName","enemy","reason","requestCreateRoom","flipTurn","finished","retryClick","onRetryReceive","otherIsHost","render","error","UI","marginTop","text","Rematch","paddingTop","float","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Checkers from './components/Checkers';\nimport Display from './components/Display';\nimport CenteredButton from './components/CenteredButton';\n\n//connection\nimport io from 'socket.io-client';\n\nlet socket;\nvar connectionTries = 0;\n\nconst initialState = {\n  step: \"Welcome\",\n  connected: false,\n}\n\nvar name = \"\";\nvar roomName = \"\";\nvar opponentName = \"\";\nvar isRoomHost = false;\nvar matchStarted = false;\nvar currentTurn = \"P1\";\n\nvar P1Rematch = false;\nvar P2Rematch = false;\n\nconst ENDPOINT = 'http://localhost:8080/';\n\nclass App extends React.Component {\n\n  \tstate = initialState;\n\n\thandleChangeName = (e) => {\n\t\tname = e.target.value;\n\t}\n\n\thandleRoom = (e) => {\n\t\troomName = e.target.value;\n\t}\n\n\tenteredName = () => {\n\t\tif(name === undefined || name === \"\") {\n\t\tname = names[Math.floor(Math.random() * names.length)]\n\t\t}\n\n\t\tsocket = io(ENDPOINT);\n\n\t\tsocket.on('reconnecting', () => {\n\t\t\tconnectionTries++;\n\t\t\tif (connectionTries === 1) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tconnectionError: \"Unable to connect to server!\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tsocket.on('connect', () => {\n\t\t\tconnectionTries = 0;\n\t\t\tthis.setState({\n\t\t\t\tstep: \"Searching\",\n\t\t\t\tconnectionError: \"\",\n\t\t\t});\n\t\t});\n\n\t\tsocket.emit('user-login', name);\n\n\t\tsocket.on('user-created-room', this.createRoomSuccess);\n\t\tsocket.on('creating-failed', this.createRoomFailed);\n\n\t\tsocket.on('user-joined', this.joinRoomSuccess);\n\t\tsocket.on('joining-failed', this.joinRoomFailed);\n\n\t\tsocket.on('user-switch-turn', (receivedData) => {\n\t\t\tcurrentTurn = receivedData.turn;\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tcurrentTurn: currentTurn\n\t\t\t});\n\t\t});\n\n\t\tsocket.on('user-left', () => {\n\t\t\tthis.returnToMenu();\n\t\t})\n\t}\n\n\trequestJoinRoom = () => {\n\t\tif(this.validateRoomName() === false){\n\t\t\tthis.setState({\n\t\t\t\tconnectionError: \"Please enter a valid room name\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsocket.emit('user-join-room', {\n\t\t\tname: name,\n\t\t\troomName: roomName\n\t\t});\n\t}\n\n\tjoinRoomSuccess = (enemy) => {\n\t\topponentName = enemy;\n\t\tmatchStarted = true;\n\n\t\tthis.setState({\n\t\t\tstep: \"Playing\",\n\t\t\tconnectionError: \"\",\n\t\t})\n\t}\n\n\tjoinRoomFailed = (reason) => {\n\t\tthis.setState({\n\t\t\tconnectionError: reason,\n\t\t});\n\t}\n\n  \trequestCreateRoom = () => {\n\t\tif(this.validateRoomName() === false){\n\t\t\tthis.setState({\n\t\t\t\tconnectionError: \"Please enter a valid room name\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsocket.emit('user-create-room', roomName);\n  \t}\n\n  \tcreateRoomSuccess = (reason) => {\n\t\tisRoomHost = true;\n\n\t\tthis.setState({\n\t\t\tstep: \"Playing\",\n\t\t\tconnectionError: \"\",\n\t\t});\n\t}\n\n\tcreateRoomFailed = (reason) => {\n\t\tthis.setState({\n\t\t\tconnectionError: reason,\n\t\t});\n\t}\n\n\tvalidateRoomName = () => {\n\t\tif(roomName === undefined || roomName === \"\"){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tflipTurn = () => {\n\t\tif(currentTurn === \"P1\") {\n\t\t\tcurrentTurn = \"P2\";\n\t\t} else{\n\t\t\tcurrentTurn = \"P1\"\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentTurn: currentTurn,\n\t\t});\n\t}\n\n\treturnToMenu = () => {\n\t\troomName = \"\";\n\t\topponentName = \"\";\n\t\tisRoomHost = false;\n\t\tmatchStarted = false;\n\t\tcurrentTurn = \"P1\";\n\n\t\tP1Rematch = false;\n\t\tP2Rematch = false;\n\n\t\tthis.setState({\n\t\t\tstep: \"Searching\",\n\t\t\tfinished: false,\n\t\t})\n\t}\n\n\tretryClick = () => {\n\t\tsocket.emit(\"retryClick\", isRoomHost);\n\t\tif(isRoomHost) {\n\t\t\tP1Rematch = true;\n\t\t} else {\n\t\t\tP2Rematch = true;\n\t\t}\n\t}\n\n\tonRetryReceive = (otherIsHost) => { //not socket.on yet. also not made on server\n\t\tif(otherIsHost) {\n\t\t\tP2Rematch = true;\n\t\t} else {\n\t\t\tP1Rematch = true;\n\t\t}\n\n\t\tif(P1Rematch && P2Rematch) {\n\t\t\tsocket.emit(\"restartGame\");\n\t\n\t\t}\n\t}\n\n  render() {\n\tvar error;\n    var UI = \"\";\n    if(this.state.step === \"Welcome\") {\n\t\tif(this.state.connectionError !== undefined){\n\t\t\terror = <h4>{this.state.connectionError}</h4>\n\t\t}\n\n\t\tUI = [\n\t\t\t<div style={{marginTop: '10%'}}>\n\t\t\t\t{error}\n\t\t\t\t<input placeholder=\"Enter name...\" onChange={ this.handleChangeName }></input>\n\t\t\t\t<CenteredButton callback={this.enteredName} text=\"Confirm name\"></CenteredButton>\n\t\t\t</div>\n\t\t]\n    } else if (this.state.step === \"Searching\") {\n\t\tif(this.state.connectionError !== undefined){\n\t\t\terror = <h4>{this.state.connectionError}</h4>\n\t\t}\n\n\t\tUI = [\n\t\t\t<h1>Welcome {name}</h1>,\n\t\t\t<div style={{marginTop: '7%'}}>\n\t\t\t\t{error}\n\t\t\t\t<input placeholder=\"Enter room name...\" onChange={ this.handleRoom }></input>\n\t\t\t\t<div>\n\t\t\t\t\t<CenteredButton callback={this.requestCreateRoom} text=\"Create room\"></CenteredButton>\n\t\t\t\t\t<CenteredButton callback={this.requestJoinRoom} text=\"Join room\"></CenteredButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t]\n    } else {\n\n\t\tvar text = \"Waiting for opponent  |  Room = \" + roomName;\n\t\tif(opponentName !== \"\") {\n\t\t\tif((isRoomHost === true && currentTurn === \"P1\") || (isRoomHost === false && currentTurn === \"P2\")) {\n\t\t\t\ttext = name + \"'s turn!\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = opponentName + \"'s turn!\";\n\t\t\t}\n\t\t}\n\n\t\tvar Rematch = <h2 style={{paddingTop: \"75%\"}}>Rematch</h2>\n\n\t\tUI = [\n\t\t<div>\n\t\t\t<h2>{text}</h2>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div style={{float: \"left\"}}>\n\t\t\t\t\t<Display dir=\"left\" text={ isRoomHost ? name : opponentName }></Display>\n\t\t\t\t\t{(this.props.finished === true && P1Rematch === true) ? Rematch : \"\"};\n\t\t\t\t</div>\n\t\t\t\t<div className=\"boardContainer\">\n\t\t\t\t\t<Checkers \n\t\t\t\t\treturnCallback={this.returnToMenu} \n\t\t\t\t\tmatchStarted={matchStarted} \n\t\t\t\t\tplayer={isRoomHost ? \"P1\" : \"P2\"} \n\t\t\t\t\tisHost={isRoomHost} name={name} \n\t\t\t\t\topponentName={opponentName} \n\t\t\t\t\tsocket={socket} \n\t\t\t\t\tflipTurnCallback={this.flipTurn}\n\t\t\t\t\tretryCallback={this.retryClick}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{float: \"right\"}}>\n\t\t\t\t\t<Display dir=\"right\" text={isRoomHost ? opponentName : name}></Display>\n\t\t\t\t\t{(this.state.finished === true && P2Rematch === true) ? Rematch : \"\"};\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n      ]\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"Title\">Checkers Online</div>\n       {UI}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nconst names = [\n\t\t\"nar\",\n\t\t\"An\",\n\t\t\"Alfr\",\n\t\t\"Alvi\",\n\t\t\"Ari\",\n\t\t\"Arinbjorn\",\n\t\t\"Arngeir\",\n\t\t\"Arngrim\",\n\t\t\"Arnfinn\",\n\t\t\"Asgeirr\",\n\t\t\"Askell\",\n\t\t\"Asvald\",\n\t\t\"Bard\",\n\t\t\"Baror\",\n\t\t\"Bersi\",\n\t\t\"Borkr\",\n\t\t\"Bjarni\",\n\t\t\"Bjorn\",\n\t\t\"Brand\",\n\t\t\"Brandr\",\n\t\t\"Cairn\",\n\t\t\"Canute\",\n\t\t\"Dar\",\n\t\t\"Einarr\",\n\t\t\"Eirik\",\n\t\t\"Egill\",\n\t\t\"Engli\",\n\t\t\"Eyvindr\",\n\t\t\"Erik\",\n\t\t\"Eyvind\",\n\t\t\"Finnr\",\n\t\t\"Floki\",\n\t\t\"Fromund\",\n\t\t\"Geirmundr\",\n\t\t\"Geirr\",\n\t\t\"Geri\",\n\t\t\"Gisli\",\n\t\t\"Gizzur\",\n\t\t\"Gjafvaldr\",\n\t\t\"Glumr\",\n\t\t\"Gorm\",\n\t\t\"Grmir\",\n\t\t\"Gunnarr\",\n\t\t\"Guomundr\",\n\t\t\"Hak\",\n\t\t\"Halbjorn\",\n\t\t\"Halfdan\",\n\t\t\"Hallvard\",\n\t\t\"Hamal\",\n\t\t\"Hamundr\",\n\t\t\"Harald\",\n\t\t\"Harek\",\n\t\t\"Hedinn\",\n\t\t\"Helgi\",\n\t\t\"Henrik\",\n\t\t\"Herbjorn\",\n\t\t\"Herjolfr\",\n\t\t\"Hildir\",\n\t\t\"Hogni\",\n\t\t\"Hrani\",\n\t\t\"Ivarr\",\n\t\t\"Hrolf\",\n\t\t\"Jimmy\",\n\t\t\"Jon\",\n\t\t\"Jorund\",\n\t\t\"Kalf\",\n\t\t\"Ketil\",\n\t\t\"Kheldar\",\n\t\t\"Klaengr\",\n\t\t\"Knut\",\n\t\t\"Kolbeinn\",\n\t\t\"Kolli\",\n\t\t\"Kollr\",\n\t\t\"Lambi\",\n\t\t\"Magnus\",\n\t\t\"Moldof\",\n\t\t\"Mursi\",\n\t\t\"Njall\",\n\t\t\"Oddr\",\n\t\t\"Olaf\",\n\t\t\"Orlyg\",\n\t\t\"Ormr\",\n\t\t\"Ornolf\",\n\t\t\"Osvald\",\n\t\t\"Ozurr\",\n\t\t\"Poror\",\n\t\t\"Prondir\",\n\t\t\"Ragi\",\n\t\t\"Ragnvald\",\n\t\t\"Refr\",\n\t\t\"Runolf\",\n\t\t\"Saemund\",\n\t\t\"Siegfried\",\n\t\t\"Sigmundr\",\n\t\t\"Sigurd\",\n\t\t\"Sigvat\",\n\t\t\"Skeggi\",\n\t\t\"Skomlr\",\n\t\t\"Slode\",\n\t\t\"Snorri\",\n\t\t\"Sokkolf\",\n\t\t\"Solvi\",\n\t\t\"Surt\",\n\t\t\"Sven\",\n\t\t\"Thangbrand\",\n\t\t\"Thjodoft\",\n\t\t\"Thorod\",\n\t\t\"Thorgest\",\n\t\t\"Thorvald\",\n\t\t\"Thrain\",\n\t\t\"Throst\",\n\t\t\"Torfi\",\n\t\t\"Torix\",\n\t\t\"Tryfing\",\n\t\t\"Ulf\",\n\t\t\"Valgaror\",\n\t\t\"Vali\",\n\t\t\"Vifil\",\n\t\t\"Vigfus\",\n\t\t\"Vika\",\n\t\t\"Waltheof\"\n\t];"]},"metadata":{},"sourceType":"module"}